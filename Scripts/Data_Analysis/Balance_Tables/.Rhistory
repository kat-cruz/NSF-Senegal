variable == "agri_6_32_bin" ~ "Used any organic fertilizer",
variable == "agri_6_36_bin" ~ "Used any inorganic/chemical fertilizer",
variable == "total_land_ha" ~ "Total land owned (hectares)",
variable == "agri_6_34_comp_any" ~ "Used any compost on any parcel (1=Yes, 0=No)",
variable == "agri_income_01" ~ "Engaged in paid agricultural work in last 12 months?",
variable == "agri_income_05" ~ "Amount received for agricultural work",
variable == "beliefs_01_bin" ~ "Probability of contracting bilharzia (1=Strongly agree/Agree)",
variable == "beliefs_02_bin" ~ "Probability of household member contracting bilharzia",
variable == "beliefs_03_bin" ~ "Probability of a child contracting bilharzia",
variable == "beliefs_04_bin" ~ "Agree: Village land should belong to community",
variable == "beliefs_05_bin" ~ "Agree: Village water sources should belong to community",
variable == "beliefs_06_bin" ~ "Agree: Right to products from own land",
variable == "beliefs_07_bin" ~ "Agree: Right to products from community land worked on",
variable == "beliefs_08_bin" ~ "Agree: Right to products from community water sources fished in",
variable == "beliefs_09_bin" ~ "Agree: Right to products from community water sources harvested from",
variable == "health_5_3_bin" ~ "Indicator for bilharzia or diarrhea in the past 12 months",
variable == "health_5_6_" ~ "Diagnosed with schistosomiasis?",
variable == "num_water_access_points" ~ "Number of village water access points",
variable == "q_51" ~ "Distance to nearest healthcare center (km)",
variable == "target_village" ~ "Indicator for auction village",
TRUE ~ variable  # Default case
))
summary_table <- summary_table %>% select(Question, everything()) %>%
select(-"stat_type")  # Remove the 'stat_type' column after modification
summary_table <- summary_table %>%
mutate_all(~ ifelse(is.na(.), "", .))
summary_table
#setwd("C:/Users/km978/Box/NSF Senegal/Data_Management/Output/Data_Analysis/Balance_Tables")
#knitr::kable(summary_table, format = "html") %>% save_kable("SS_balance_table.html")
summary_table <- summary_table %>%
mutate(Question = case_when(
variable == "hhid_village" ~ "Village ID",
variable == "hhid" ~ "Household ID",
variable == "trained_hh" ~ "Trained household",
variable == "hh_age_h" ~ "Household head age",
variable == "hh_education_level_bin_h" ~ "Indicator for selected household head education level",
variable == "hh_education_skills_5_h" ~ "Indicator that household head is literate (1=Yes, 0=No)",
variable == "hh_gender_h" ~ "Household head gender",
variable == "hh_numero" ~ "Size of household",
variable == "hh_03_" ~ "Worked in domestic agricultural activities?",
variable == "hh_10_" ~ "Hours per week spent within 1 meter of surface water source",
variable == "hh_12_6_" ~ "Harvest aquatic vegetation",
variable == "hh_16_" ~ "Hours spent producing, purchasing, or applying fertilizer",
variable == "hh_15_2" ~ "Indicator for making fertilizer (compost) among those who spent time near a water source",
variable == "hh_26_" ~ "Currently enrolled in formal school? (1=Yes, 2=No)",
variable == "hh_27_" ~ "Attended non-formal school or training? (1=Yes, 2=No)",
variable == "hh_29_" ~ "Highest level and grade completed in school",
variable == "hh_31_" ~ "School performance during the 2023/2024 year",
variable == "hh_37_" ~ "Missed >1 consecutive week of school due to illness? (1=Yes, 2=No)",
variable == "hh_38_" ~ "Days attended school in the past 7 days",
variable == "living_01_bin" ~ "Selected tap water as main drinking source",
variable == "game_A_total" ~ "Total paid for Game A",
variable == "game_B_total" ~ "Total paid for Game B",
variable == "TLU" ~ "Tropical livestock units",
variable == "agri_6_15" ~ "Number of cultivated plots",
variable == "agri_6_32_bin" ~ "Used any organic fertilizer",
variable == "agri_6_36_bin" ~ "Used any inorganic/chemical fertilizer",
variable == "total_land_ha" ~ "Total land owned (hectares)",
variable == "agri_6_34_comp_any" ~ "Used any compost on any parcel (1=Yes, 0=No)",
variable == "agri_income_01" ~ "Engaged in paid agricultural work in last 12 months?",
variable == "agri_income_05" ~ "Amount received for agricultural work",
variable == "beliefs_01_bin" ~ "Probability of contracting bilharzia (1=Strongly agree/Agree)",
variable == "beliefs_02_bin" ~ "Probability of household member contracting bilharzia",
variable == "beliefs_03_bin" ~ "Probability of a child contracting bilharzia",
variable == "beliefs_04_bin" ~ "Agree: Village land should belong to community",
variable == "beliefs_05_bin" ~ "Agree: Village water sources should belong to community",
variable == "beliefs_06_bin" ~ "Agree: Right to products from own land",
variable == "beliefs_07_bin" ~ "Agree: Right to products from community land worked on",
variable == "beliefs_08_bin" ~ "Agree: Right to products from community water sources fished in",
variable == "beliefs_09_bin" ~ "Agree: Right to products from community water sources harvested from",
variable == "health_5_3_bin" ~ "Indicator for bilharzia or diarrhea in the past 12 months ((1=Yes, 0=No, among those reporting illness)",
variable == "health_5_6_" ~ "Indicator for Diagnosed with schistosomiasis (1=Yes, 0=No)",
variable == "num_water_access_points" ~ "Number of village water access points",
variable == "q_51" ~ "Distance to nearest healthcare center (km)",
#variable == "target_village" ~ "Indicator for auction village",
TRUE ~ variable  # Default case
))
summary_table <- summary_table %>% select(Question, everything()) %>%
select(-"stat_type") %>%
filter(variable != "target_village")
summary_table <- summary_table %>%
mutate(
variable = ifelse(stat_type == "SD" & !is.na(stat_type), "", variable),  # Clear variable for SD rows
stat_type = ifelse(stat_type == "SD" & !is.na(stat_type), "", stat_type)  # Clear stat_type for SD rows
) %>%
mutate(across(where(is.numeric), ~ format(.x, nsmall = 2))) %>%
mutate(across(everything(), as.character)) %>%  # Ensure all columns are character type
mutate(across(
Control:Treatment3,  # Apply only to numeric columns
~ ifelse(stat_type == "", paste0("(", trimws(.), ")"), .)  # Add parentheses for SD values
))
#
# compute_summary_stats <- function(df) {
#   df %>%
#     group_by(group, variable) %>%
#     summarise(
#       mean_value = round(mean(value, na.rm = TRUE), 2),
#       sd_value = round(sd(value, na.rm = TRUE), 2),
#       .groups = "drop"  # Prevents group structure from persisting
#     ) %>%
#     pivot_longer(cols = c(mean_value, sd_value), names_to = "stat_type", values_to = "stat_value") %>%
#     mutate(stat_type = ifelse(stat_type == "mean_value", "Mean", "SD")) %>%
#     pivot_wider(names_from = group, values_from = stat_value) %>%
#     arrange(variable, stat_type)  # Ensures that mean is always followed by SD
# }
#
#
#   summary_table <- compute_summary_stats(long_data)
#
#   # View output
#   print(summary_table)
compute_summary_stats <- function(df) {
df %>%
group_by(group, variable) %>%
summarise(
mean_value = round(mean(value, na.rm = TRUE), 2),
sd_value = round(sd(value, na.rm = TRUE), 2),
.groups = "drop"  # Prevents group structure from persisting
) %>%
pivot_longer(cols = c(mean_value, sd_value), names_to = "stat_type", values_to = "stat_value") %>%
mutate(stat_type = ifelse(stat_type == "mean_value", "Mean", "SD")) %>%
pivot_wider(names_from = group, values_from = stat_value) %>%
arrange(variable, stat_type) %>%
# This ensures the 'variable' and 'stat_type' columns come first
select(variable, stat_type, everything()) %>%
# Explicitly ensure 'variable' is ordered as it appears in the original data
arrange(match(variable, unique(df$variable)))
}
summary_table <- compute_summary_stats(long_data)
# View output
print(summary_table)
summary_table <- summary_table %>%
mutate(
variable = ifelse(stat_type == "SD" & !is.na(stat_type), "", variable),  # Clear variable for SD rows
stat_type = ifelse(stat_type == "SD" & !is.na(stat_type), "", stat_type)  # Clear stat_type for SD rows
) %>%
mutate(across(where(is.numeric), ~ format(.x, nsmall = 2))) %>%
mutate(across(everything(), as.character)) %>%  # Ensure all columns are character type
mutate(across(
Control:Treatment3,  # Apply only to numeric columns
~ ifelse(stat_type == "", paste0("(", trimws(.), ")"), .)  # Add parentheses for SD values
))
summary_table <- summary_table %>%
mutate(Question = case_when(
variable == "hhid_village" ~ "Village ID",
variable == "hhid" ~ "Household ID",
variable == "trained_hh" ~ "Trained household",
variable == "hh_age_h" ~ "Household head age",
variable == "hh_education_level_bin_h" ~ "Indicator for selected household head education level",
variable == "hh_education_skills_5_h" ~ "Indicator that household head is literate (1=Yes, 0=No)",
variable == "hh_gender_h" ~ "Household head gender",
variable == "hh_numero" ~ "Size of household",
variable == "hh_03_" ~ "Worked in domestic agricultural activities?",
variable == "hh_10_" ~ "Hours per week spent within 1 meter of surface water source",
variable == "hh_12_6_" ~ "Harvest aquatic vegetation",
variable == "hh_16_" ~ "Hours spent producing, purchasing, or applying fertilizer",
variable == "hh_15_2" ~ "Indicator for making fertilizer (compost) among those who spent time near a water source",
variable == "hh_26_" ~ "Currently enrolled in formal school? (1=Yes, 2=No)",
variable == "hh_27_" ~ "Attended non-formal school or training? (1=Yes, 2=No)",
variable == "hh_29_" ~ "Highest level and grade completed in school",
variable == "hh_31_" ~ "School performance during the 2023/2024 year",
variable == "hh_37_" ~ "Missed >1 consecutive week of school due to illness? (1=Yes, 2=No)",
variable == "hh_38_" ~ "Days attended school in the past 7 days",
variable == "living_01_bin" ~ "Selected tap water as main drinking source",
variable == "game_A_total" ~ "Total paid for Game A",
variable == "game_B_total" ~ "Total paid for Game B",
variable == "TLU" ~ "Tropical livestock units",
variable == "agri_6_15" ~ "Number of cultivated plots",
variable == "agri_6_32_bin" ~ "Used any organic fertilizer",
variable == "agri_6_36_bin" ~ "Used any inorganic/chemical fertilizer",
variable == "total_land_ha" ~ "Total land owned (hectares)",
variable == "agri_6_34_comp_any" ~ "Used any compost on any parcel (1=Yes, 0=No)",
variable == "agri_income_01" ~ "Engaged in paid agricultural work in last 12 months?",
variable == "agri_income_05" ~ "Amount received for agricultural work",
variable == "beliefs_01_bin" ~ "Probability of contracting bilharzia (1=Strongly agree/Agree)",
variable == "beliefs_02_bin" ~ "Probability of household member contracting bilharzia",
variable == "beliefs_03_bin" ~ "Probability of a child contracting bilharzia",
variable == "beliefs_04_bin" ~ "Agree: Village land should belong to community",
variable == "beliefs_05_bin" ~ "Agree: Village water sources should belong to community",
variable == "beliefs_06_bin" ~ "Agree: Right to products from own land",
variable == "beliefs_07_bin" ~ "Agree: Right to products from community land worked on",
variable == "beliefs_08_bin" ~ "Agree: Right to products from community water sources fished in",
variable == "beliefs_09_bin" ~ "Agree: Right to products from community water sources harvested from",
variable == "health_5_3_bin" ~ "Indicator for bilharzia or diarrhea in the past 12 months ((1=Yes, 0=No, among those reporting illness)",
variable == "health_5_6_" ~ "Indicator for Diagnosed with schistosomiasis (1=Yes, 0=No)",
variable == "num_water_access_points" ~ "Number of village water access points",
variable == "q_51" ~ "Distance to nearest healthcare center (km)",
#variable == "target_village" ~ "Indicator for auction village",
TRUE ~ variable  # Default case
))
summary_table <- summary_table %>% select(Question, everything()) %>%
select(-"stat_type") %>%
filter(variable != "target_village")
summary_table <- summary_table %>%
mutate_all(~ ifelse(is.na(.), "", .))
summary_table
#
# compute_summary_stats <- function(df) {
#   df %>%
#     group_by(group, variable) %>%
#     summarise(
#       mean_value = round(mean(value, na.rm = TRUE), 2),
#       sd_value = round(sd(value, na.rm = TRUE), 2),
#       .groups = "drop"  # Prevents group structure from persisting
#     ) %>%
#     pivot_longer(cols = c(mean_value, sd_value), names_to = "stat_type", values_to = "stat_value") %>%
#     mutate(stat_type = ifelse(stat_type == "mean_value", "Mean", "SD")) %>%
#     pivot_wider(names_from = group, values_from = stat_value) %>%
#     arrange(variable, stat_type)  # Ensures that mean is always followed by SD
# }
#
#
#   summary_table <- compute_summary_stats(long_data)
#
#   # View output
#   print(summary_table)
compute_summary_stats <- function(df) {
df %>%
group_by(group, variable) %>%
summarise(
mean_value = round(mean(value, na.rm = TRUE), 2),
sd_value = round(sd(value, na.rm = TRUE), 2),
.groups = "drop"  # Prevents group structure from persisting
) %>%
pivot_longer(cols = c(mean_value, sd_value), names_to = "stat_type", values_to = "stat_value") %>%
mutate(stat_type = ifelse(stat_type == "mean_value", "Mean", "SD")) %>%
pivot_wider(names_from = group, values_from = stat_value) %>%
arrange(variable, stat_type) %>%
# This ensures the 'variable' and 'stat_type' columns come first
select(variable, stat_type, everything()) %>%
# Explicitly ensure 'variable' is ordered as it appears in the original data
arrange(match(variable, unique(df$variable)))
}
summary_table <- compute_summary_stats(long_data)
# View output
print(summary_table)
# index2 <- which(summary_table$variable == "hh_12_1_")
#   summary_table <- add_row(summary_table, variable = "hh_12", .before = index2)
# Add "hh_13_1_" above "hh_12"
# index3 <- which(summary_table$variable == "hh_13_01")
#   summary_table <- add_row(summary_table, variable = "hh_13", .before = index3)
# index5 <- which(summary_table$variable == "species_1")
#   final_summary_tabletable <- add_row(summary_table, variable = "species", .before = index5)
summary_table <- summary_table %>%
mutate(
variable = ifelse(stat_type == "SD" & !is.na(stat_type), "", variable),  # Clear variable for SD rows
stat_type = ifelse(stat_type == "SD" & !is.na(stat_type), "", stat_type)  # Clear stat_type for SD rows
) %>%
mutate(across(where(is.numeric), ~ format(.x, nsmall = 2))) %>%
mutate(across(everything(), as.character)) %>%  # Ensure all columns are character type
mutate(across(
Control:Treatment3,  # Apply only to numeric columns
~ ifelse(stat_type == "", paste0("(", trimws(.), ")"), .)  # Add parentheses for SD values
))
summary_table
summary_table <- summary_table %>%
mutate(Question = case_when(
variable == "hhid_village" ~ "Village ID",
variable == "hhid" ~ "Household ID",
variable == "trained_hh" ~ "Trained household",
variable == "hh_age_h" ~ "Household head age",
variable == "hh_education_level_bin_h" ~ "Indicator for selected household head education level",
variable == "hh_education_skills_5_h" ~ "Indicator that household head is literate (1=Yes, 0=No)",
variable == "hh_gender_h" ~ "Household head gender",
variable == "hh_numero" ~ "Size of household",
variable == "hh_03_" ~ "Worked in domestic agricultural activities?",
variable == "hh_10_" ~ "Hours per week spent within 1 meter of surface water source",
variable == "hh_12_6_" ~ "Harvest aquatic vegetation",
variable == "hh_16_" ~ "Hours spent producing, purchasing, or applying fertilizer",
variable == "hh_15_2" ~ "Indicator for making fertilizer (compost) among those who spent time near a water source",
variable == "hh_26_" ~ "Currently enrolled in formal school? (1=Yes, 2=No)",
variable == "hh_27_" ~ "Attended non-formal school or training? (1=Yes, 2=No)",
variable == "hh_29_" ~ "Highest level and grade completed in school",
variable == "hh_31_" ~ "School performance during the 2023/2024 year",
variable == "hh_37_" ~ "Missed >1 consecutive week of school due to illness? (1=Yes, 2=No)",
variable == "hh_38_" ~ "Days attended school in the past 7 days",
variable == "living_01_bin" ~ "Selected tap water as main drinking source",
variable == "game_A_total" ~ "Total paid for Game A",
variable == "game_B_total" ~ "Total paid for Game B",
variable == "TLU" ~ "Tropical livestock units",
variable == "agri_6_15" ~ "Number of cultivated plots",
variable == "agri_6_32_bin" ~ "Used any organic fertilizer",
variable == "agri_6_36_bin" ~ "Used any inorganic/chemical fertilizer",
variable == "total_land_ha" ~ "Total land owned (hectares)",
variable == "agri_6_34_comp_any" ~ "Used any compost on any parcel (1=Yes, 0=No)",
variable == "agri_income_01" ~ "Engaged in paid agricultural work in last 12 months?",
variable == "agri_income_05" ~ "Amount received for agricultural work",
variable == "beliefs_01_bin" ~ "Probability of contracting bilharzia (1=Strongly agree/Agree)",
variable == "beliefs_02_bin" ~ "Probability of household member contracting bilharzia",
variable == "beliefs_03_bin" ~ "Probability of a child contracting bilharzia",
variable == "beliefs_04_bin" ~ "Agree: Village land should belong to community",
variable == "beliefs_05_bin" ~ "Agree: Village water sources should belong to community",
variable == "beliefs_06_bin" ~ "Agree: Right to products from own land",
variable == "beliefs_07_bin" ~ "Agree: Right to products from community land worked on",
variable == "beliefs_08_bin" ~ "Agree: Right to products from community water sources fished in",
variable == "beliefs_09_bin" ~ "Agree: Right to products from community water sources harvested from",
variable == "health_5_3_bin" ~ "Indicator for bilharzia or diarrhea in the past 12 months ((1=Yes, 0=No, among those reporting illness)",
variable == "health_5_6_" ~ "Indicator for Diagnosed with schistosomiasis (1=Yes, 0=No)",
variable == "num_water_access_points" ~ "Number of village water access points",
variable == "q_51" ~ "Distance to nearest healthcare center (km)",
variable == "target_village" ~ "Indicator for auction village",
TRUE ~ variable  # Default case
))
summary_table <- summary_table %>% select(Question, everything()) %>%
select(-"stat_type")
#%>%   filter(variable != "target_village")
summary_table <- summary_table %>%
mutate_all(~ ifelse(is.na(.), "", .))
summary_table
#setwd("C:/Users/km978/Box/NSF Senegal/Data_Management/Output/Data_Analysis/Balance_Tables")
#knitr::kable(summary_table, format = "html") %>% save_kable("SS_balance_table.html")
# Define the file paths
proj_paths <- list(
projects = "C:/Users/Kateri/Box/NSF Senegal",
alternative_projects = "C:/Users/km978/Box/NSF Senegal"
)
# Check if the Kateri path exists and resolve the project path accordingly
if (file.exists(proj_paths$projects)) {
proj <- kwb.utils::resolve(list(
projects = proj_paths$projects,
p1 = "<projects>/Data_Management/Output/Data_Analysis/Balance_Tables"
))
} else {
proj <- kwb.utils::resolve(list(
projects = proj_paths$alternative_projects,
p1 = "<projects>/Data_Management/Output/Data_Analysis/Balance_Tables"
))
}
file_path_balance_tables_df <- file.path(proj$p1, "baseline_balance_tables_data_PAP.dta")
balance_df <- read_dta(file_path_balance_tables_df)
balance_df
# Adding a single categorical variable for household training categories
balance_df <- balance_df %>%
mutate(
# Extract the two middle characters (e.g., 2A) from hhid
group = str_sub(hhid, 3, 4),
# Assign treatment group based on the extracted group value
treatment_group = case_when(
group %in% c("0A", "0B") ~ "Control",
group %in% c("1A", "1B") ~ "Treatment1", # Public health trained
group %in% c("2A", "2B") ~ "Treatment2", # Private benefits trained
group %in% c("3A", "3B") ~ "Treatment3"  # Public and private trained
)
) %>%
select(-group)
long_data <- balance_df %>%
pivot_longer(
cols = -c(hhid, hhid_village, treatment_group),  # Keep hhid and group as is, pivot all other columns
names_to = "variable",    # Create a column named "variable" for former column names
values_to = "value"       # Store values in a column named "value"
)
long_data <- long_data %>%
rename(group = treatment_group)
long_data
compute_summary_stats <- function(df) {
df %>%
group_by(group, variable) %>%
summarise(
mean_value = round(mean(value, na.rm = TRUE), 2),
sd_value = round(sd(value, na.rm = TRUE), 2),
.groups = "drop"  # Prevents group structure from persisting
) %>%
pivot_longer(cols = c(mean_value, sd_value), names_to = "stat_type", values_to = "stat_value") %>%
mutate(stat_type = ifelse(stat_type == "mean_value", "Mean", "SD")) %>%
pivot_wider(names_from = group, values_from = stat_value) %>%
arrange(variable, stat_type) %>%
# This ensures the 'variable' and 'stat_type' columns come first
select(variable, stat_type, everything()) %>%
# Explicitly ensure 'variable' is ordered as it appears in the original data
arrange(match(variable, unique(df$variable)))
}
summary_table <- compute_summary_stats(long_data)
# View output
print(summary_table)
# index2 <- which(summary_table$variable == "hh_12_1_")
#   summary_table <- add_row(summary_table, variable = "hh_12", .before = index2)
# Add "hh_13_1_" above "hh_12"
# index3 <- which(summary_table$variable == "hh_13_01")
#   summary_table <- add_row(summary_table, variable = "hh_13", .before = index3)
# index5 <- which(summary_table$variable == "species_1")
#   final_summary_tabletable <- add_row(summary_table, variable = "species", .before = index5)
summary_table <- summary_table %>%
mutate(
variable = ifelse(stat_type == "SD" & !is.na(stat_type), "", variable),  # Clear variable for SD rows
stat_type = ifelse(stat_type == "SD" & !is.na(stat_type), "", stat_type)  # Clear stat_type for SD rows
) %>%
mutate(across(where(is.numeric), ~ format(.x, nsmall = 2))) %>%
mutate(across(everything(), as.character)) %>%  # Ensure all columns are character type
mutate(across(
Control:Treatment3,  # Apply only to numeric columns
~ ifelse(stat_type == "", paste0("(", trimws(.), ")"), .)  # Add parentheses for SD values
))
summary_table
summary_table <- summary_table %>%
mutate(Question = case_when(
variable == "hhid_village" ~ "Village ID",
variable == "hhid" ~ "Household ID",
variable == "trained_hh" ~ "Trained household",
variable == "hh_age_h" ~ "Household head age",
variable == "hh_education_level_bin_h" ~ "Indicator for selected household head education level",
variable == "hh_education_skills_5_h" ~ "Indicator that household head is literate (1=Yes, 0=No)",
variable == "hh_gender_h" ~ "Household head gender",
variable == "hh_numero" ~ "Size of household",
variable == "hh_03_" ~ "Indicator for those who worked in domestic agricultural activities (1=Yes, 0=No) ",
variable == "hh_10_" ~ "Hours per week spent within 1 meter of surface water source",
variable == "hh_12_6_" ~ "Harvest aquatic vegetation",
variable == "hh_16_" ~ "Hours spent producing, purchasing, or applying fertilizer",
variable == "hh_15_2" ~ "Indicator for making fertilizer (compost) among those who spent time near a water source",
variable == "hh_26_" ~ "Currently enrolled in formal school? (1=Yes, 2=No, asked to children)",
variable == "hh_27_" ~ "Attended non-formal school or training? (1=Yes, 2=No, asked to children)",
variable == "hh_29_bin" ~ "Indicator if achieved any level higher than primary 6th grade (Asked to children)",
variable == "hh_31_" ~ "School performance during the 2023/2024 year (Asked to children)",
variable == "hh_37_" ~ "Missed >1 consecutive week of school due to illness? (1=Yes, 2=No, asked to children)",
variable == "hh_38_" ~ "Days attended school in the past 7 days (Asked to children)"
variable == "living_01_bin" ~ "Selected tap water as main drinking source",
compute_summary_stats <- function(df) {
df %>%
group_by(group, variable) %>%
summarise(
mean_value = round(mean(value, na.rm = TRUE), 2),
sd_value = round(sd(value, na.rm = TRUE), 2),
.groups = "drop"  # Prevents group structure from persisting
) %>%
pivot_longer(cols = c(mean_value, sd_value), names_to = "stat_type", values_to = "stat_value") %>%
mutate(stat_type = ifelse(stat_type == "mean_value", "Mean", "SD")) %>%
pivot_wider(names_from = group, values_from = stat_value) %>%
arrange(variable, stat_type) %>%
# This ensures the 'variable' and 'stat_type' columns come first
select(variable, stat_type, everything()) %>%
# Explicitly ensure 'variable' is ordered as it appears in the original data
arrange(match(variable, unique(df$variable)))
}
summary_table <- compute_summary_stats(long_data)
# View output
print(summary_table)
# index2 <- which(summary_table$variable == "hh_12_1_")
#   summary_table <- add_row(summary_table, variable = "hh_12", .before = index2)
# Add "hh_13_1_" above "hh_12"
# index3 <- which(summary_table$variable == "hh_13_01")
#   summary_table <- add_row(summary_table, variable = "hh_13", .before = index3)
# index5 <- which(summary_table$variable == "species_1")
#   final_summary_tabletable <- add_row(summary_table, variable = "species", .before = index5)
summary_table <- summary_table %>%
mutate(
variable = ifelse(stat_type == "SD" & !is.na(stat_type), "", variable),  # Clear variable for SD rows
stat_type = ifelse(stat_type == "SD" & !is.na(stat_type), "", stat_type)  # Clear stat_type for SD rows
) %>%
mutate(across(where(is.numeric), ~ format(.x, nsmall = 2))) %>%
mutate(across(everything(), as.character)) %>%  # Ensure all columns are character type
mutate(across(
Control:Treatment3,  # Apply only to numeric columns
~ ifelse(stat_type == "", paste0("(", trimws(.), ")"), .)  # Add parentheses for SD values
))
summary_table
summary_table <- summary_table %>%
mutate(Question = case_when(
variable == "hhid_village" ~ "Village ID",
variable == "hhid" ~ "Household ID",
variable == "trained_hh" ~ "Trained household",
variable == "hh_age_h" ~ "Household head age",
variable == "hh_education_level_bin_h" ~ "Indicator for selected household head education level",
variable == "hh_education_skills_5_h" ~ "Indicator that household head is literate (1=Yes, 0=No)",
variable == "hh_gender_h" ~ "Household head gender",
variable == "hh_numero" ~ "Size of household",
variable == "hh_03_" ~ "Indicator for those who worked in domestic agricultural activities (1=Yes, 0=No) ",
variable == "hh_10_" ~ "Hours per week spent within 1 meter of surface water source",
variable == "hh_12_6_" ~ "Harvest aquatic vegetation",
variable == "hh_16_" ~ "Hours spent producing, purchasing, or applying fertilizer",
variable == "hh_15_2" ~ "Indicator for making fertilizer (compost) among those who spent time near a water source",
variable == "hh_26_" ~ "Currently enrolled in formal school? (1=Yes, 2=No, asked to children)",
variable == "hh_27_" ~ "Attended non-formal school or training? (1=Yes, 2=No, asked to children)",
variable == "hh_29_bin" ~ "Indicator if achieved any level higher than primary 6th grade (Asked to children)",
variable == "hh_31_" ~ "School performance during the 2023/2024 year (Asked to children)",
variable == "hh_37_" ~ "Missed >1 consecutive week of school due to illness? (1=Yes, 2=No, asked to children)",
variable == "hh_38_" ~ "Days attended school in the past 7 days (Asked to children)",
variable == "living_01_bin" ~ "Selected tap water as main drinking source",
variable == "game_A_total" ~ "Total paid for Game A",
variable == "game_B_total" ~ "Total paid for Game B",
variable == "TLU" ~ "Tropical livestock units",
variable == "agri_6_15" ~ "Number of cultivated plots",
variable == "agri_6_32_bin" ~ "Used any organic fertilizer",
variable == "agri_6_36_bin" ~ "Used any inorganic/chemical fertilizer",
variable == "total_land_ha" ~ "Total land owned (hectares)",
variable == "agri_6_34_comp_any" ~ "Used any compost on any parcel (1=Yes, 0=No)",
variable == "agri_income_01" ~ "Engaged in paid agricultural work in last 12 months?",
variable == "agri_income_05" ~ "Amount received for agricultural work",
variable == "beliefs_01_bin" ~ "Probability of contracting bilharzia (1=Strongly agree/Agree)",
variable == "beliefs_02_bin" ~ "Probability of household member contracting bilharzia",
variable == "beliefs_03_bin" ~ "Probability of a child contracting bilharzia",
variable == "beliefs_04_bin" ~ "Agree: Village land should belong to community",
variable == "beliefs_05_bin" ~ "Agree: Village water sources should belong to community",
variable == "beliefs_06_bin" ~ "Agree: Right to products from own land",
variable == "beliefs_07_bin" ~ "Agree: Right to products from community land worked on",
variable == "beliefs_08_bin" ~ "Agree: Right to products from community water sources fished in",
variable == "beliefs_09_bin" ~ "Agree: Right to products from community water sources harvested from",
variable == "health_5_3_bin" ~ "Indicator for bilharzia or diarrhea in the past 12 months ((1=Yes, 0=No, among those reporting illness)",
variable == "health_5_6_" ~ "Indicator for Diagnosed with schistosomiasis (1=Yes, 0=No)",
variable == "num_water_access_points" ~ "Number of village water access points",
variable == "q_51" ~ "Distance to nearest healthcare center (km)",
variable == "target_village" ~ "Indicator for auction village",
TRUE ~ variable  # Default case
))
summary_table <- summary_table %>% select(Question, everything()) %>%
select(-"stat_type")
#%>%   filter(variable != "target_village")
summary_table <- summary_table %>%
mutate_all(~ ifelse(is.na(.), "", .))
summary_table
#setwd("C:/Users/km978/Box/NSF Senegal/Data_Management/Output/Data_Analysis/Balance_Tables")
#knitr::kable(summary_table, format = "html") %>% save_kable("SS_balance_table.html")
setwd("C:/Users/km978/Box/NSF Senegal/Data_Management/Output/Data_Analysis/Balance_Tables")
knitr::kable(summary_table, format = "html") %>% save_kable("SS_balance_tableV2.html")
