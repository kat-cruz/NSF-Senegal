formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
model
# View summary of the model
summary(model)
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
treatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# Create coefficient names dynamically for the Wald test
# We're using the variables to generate the coefficient names that represent each treatment arm
# Create coefficient names dynamically for the Wald test (one for each treatment)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
# Perform the Wald test to check the joint significance of these predictors across treatments
joint_test <- linearHypothesis(model, coefs)
formula
model2 <- multinom(treatment_group ~ hh_age_h + hh_education_level_bin_h + hh_education_skills_5_h +
hh_gender_h + hh_numero + hh_03_ + hh_10_ + hh_12_6_ + hh_16_ +
hh_15_2 + hh_26_ + hh_29_01 + hh_29_02 + hh_29_03 + hh_29_04 +
hh_37_ + hh_38_ + living_01_bin + game_A_total + game_B_total +
TLU + agri_6_15 + agri_6_32_bin + agri_6_36_bin + total_land_ha +
agri_6_34_comp_any + agri_income_01 + agri_income_05 + beliefs_01_bin +
beliefs_02_bin + beliefs_03_bin + beliefs_04_bin + beliefs_05_bin +
beliefs_06_bin + beliefs_07_bin + beliefs_08_bin + beliefs_09_bin +
health_5_3_bin + health_5_6_ + num_water_access_points +
q_51 - 1, joint_df)
summary(model2)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
coefs
joint_test <- linearHypothesis(model2, coefs)
model2 <- multinom(treatment_group ~ hh_age_h + hh_education_level_bin_h + hh_education_skills_5_h +
hh_gender_h + hh_numero + hh_03_ + hh_10_ + hh_12_6_ + hh_16_ +
hh_15_2 + hh_26_ + hh_29_01 + hh_29_02 + hh_29_03 + hh_29_04 +
hh_37_ + hh_38_ + living_01_bin + game_A_total + game_B_total +
TLU + agri_6_15 + agri_6_32_bin + agri_6_36_bin + total_land_ha +
agri_6_34_comp_any + agri_income_01 + agri_income_05 + beliefs_01_bin +
beliefs_02_bin + beliefs_03_bin + beliefs_04_bin + beliefs_05_bin +
beliefs_06_bin + beliefs_07_bin + beliefs_08_bin + beliefs_09_bin +
health_5_3_bin + health_5_6_ + num_water_access_points - 1, joint_df)
# View summary of the model
summary(model2)
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
treatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# Create coefficient names dynamically for the Wald test
# We're using the variables to generate the coefficient names that represent each treatment arm
# Create coefficient names dynamically for the Wald test (one for each treatment)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
coefs
# Perform the Wald test to check the joint significance of these predictors across treatments
joint_test <- linearHypothesis(model2, coefs)
vars_to_include
vars_to_include <- c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_", "num_water_access_points")
model2 <- multinom(treatment_group ~ hh_age_h + hh_education_level_bin_h + hh_education_skills_5_h +
hh_gender_h + hh_numero + hh_03_ + hh_10_ + hh_12_6_ + hh_16_ +
hh_15_2 + hh_26_ + hh_29_01 + hh_29_02 + hh_29_03 + hh_29_04 +
hh_37_ + hh_38_ + living_01_bin + game_A_total + game_B_total +
TLU + agri_6_15 + agri_6_32_bin + agri_6_36_bin + total_land_ha +
agri_6_34_comp_any + agri_income_01 + agri_income_05 + beliefs_01_bin +
beliefs_02_bin + beliefs_03_bin + beliefs_04_bin + beliefs_05_bin +
beliefs_06_bin + beliefs_07_bin + beliefs_08_bin + beliefs_09_bin +
health_5_3_bin + health_5_6_ + num_water_access_points - 1, joint_df)
# View summary of the model
summary(model2)
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
treatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# Create coefficient names dynamically for the Wald test
# We're using the variables to generate the coefficient names that represent each treatment arm
# Create coefficient names dynamically for the Wald test (one for each treatment)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
coefs
# Perform the Wald test to check the joint significance of these predictors across treatments
joint_test <- linearHypothesis(model2, coefs)
vars_to_include <- c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_")
model2 <- multinom(treatment_group ~ hh_age_h + hh_education_level_bin_h + hh_education_skills_5_h +
hh_gender_h + hh_numero + hh_03_ + hh_10_ + hh_12_6_ + hh_16_ +
hh_15_2 + hh_26_ + hh_29_01 + hh_29_02 + hh_29_03 + hh_29_04 +
hh_37_ + hh_38_ + living_01_bin + game_A_total + game_B_total +
TLU + agri_6_15 + agri_6_32_bin + agri_6_36_bin + total_land_ha +
agri_6_34_comp_any + agri_income_01 + agri_income_05 + beliefs_01_bin +
beliefs_02_bin + beliefs_03_bin + beliefs_04_bin + beliefs_05_bin +
beliefs_06_bin + beliefs_07_bin + beliefs_08_bin + beliefs_09_bin +
health_5_3_bin + health_5_6_ - 1, joint_df)
# View summary of the model
summary(model2)
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
treatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# Create coefficient names dynamically for the Wald test
# We're using the variables to generate the coefficient names that represent each treatment arm
# Create coefficient names dynamically for the Wald test (one for each treatment)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
coefs
# Perform the Wald test to check the joint significance of these predictors across treatments
joint_test <- linearHypothesis(model2, coefs)
vars_to_include <- c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "health_5_3_bin", "health_5_6_")
model2 <- multinom(treatment_group ~ hh_age_h + hh_education_level_bin_h + hh_education_skills_5_h +
hh_gender_h + hh_numero + hh_03_ + hh_10_ + hh_12_6_ + hh_16_ +
hh_15_2 + hh_26_ + hh_29_01 + hh_29_02 + hh_29_03 + hh_29_04 +
hh_37_ + hh_38_ + living_01_bin + game_A_total + game_B_total +
TLU + agri_6_15 + agri_6_32_bin + agri_6_36_bin + total_land_ha +
agri_6_34_comp_any + agri_income_01 + agri_income_05 + beliefs_01_bin +
beliefs_02_bin + beliefs_03_bin + beliefs_04_bin + beliefs_05_bin +
beliefs_06_bin + beliefs_07_bin + beliefs_08_bin  +
health_5_3_bin + health_5_6_ - 1, joint_df)
# View summary of the model
summary(model2)
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
treatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# Create coefficient names dynamically for the Wald test
# We're using the variables to generate the coefficient names that represent each treatment arm
# Create coefficient names dynamically for the Wald test (one for each treatment)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
coefs
# Perform the Wald test to check the joint significance of these predictors across treatments
joint_test <- linearHypothesis(model2, coefs)
?linearHypothesis
# Exclude 'treatment_group' and any other variable you don't want (e.g., 'hhid', 'target_village')
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
model
# vars_to_include <- c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
#                      "hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
#                      "hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
#                      "game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
#                      "agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
#                      "beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
#                      "beliefs_08_bin", "health_5_3_bin", "health_5_6_")
#
#
# model2 <- multinom(treatment_group ~ hh_age_h + hh_education_level_bin_h + hh_education_skills_5_h +
#     hh_gender_h + hh_numero + hh_03_ + hh_10_ + hh_12_6_ + hh_16_ +
#     hh_15_2 + hh_26_ + hh_29_01 + hh_29_02 + hh_29_03 + hh_29_04 +
#     hh_37_ + hh_38_ + living_01_bin + game_A_total + game_B_total +
#     TLU + agri_6_15 + agri_6_32_bin + agri_6_36_bin + total_land_ha +
#     agri_6_34_comp_any + agri_income_01 + agri_income_05 + beliefs_01_bin +
#     beliefs_02_bin + beliefs_03_bin + beliefs_04_bin + beliefs_05_bin +
#     beliefs_06_bin + beliefs_07_bin + beliefs_08_bin  +
#     health_5_3_bin + health_5_6_ - 1, joint_df)
# View summary of the model
#summary(model2)
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
treatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# Create coefficient names dynamically for the Wald test
# We're using the variables to generate the coefficient names that represent each treatment arm
# Create coefficient names dynamically for the Wald test (one for each treatment)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
coefs
# Perform the Wald test to check the joint significance of these predictors across treatments
joint_test <- linearHypothesis(model, c(coefs, "(Intercept) = 0"))
model_coef_names <- rownames(summary(model)$coefficients)
# Exclude the intercept (reference category) from the list of coefficients
coefs <- model_coef_names[!grepl("Intercept", model_coef_names)]
# Perform the Wald test to check the joint significance of the variables (excluding intercept)
joint_test <- linearHypothesis(model, coefs)
# Exclude 'treatment_group' and any other variable you don't want (e.g., 'hhid', 'target_village')
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
model
?multinom
coefs
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
treatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# Create coefficient names dynamically for the Wald test (one for each treatment)
coefs <- unlist(lapply(vars_to_include, function(var) {
paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
}))
coefs
model_coef_names <- rownames(summary(model)$coefficients)
model_coef_names
?linearHypothesis
if (require(nnet)){
print(m <- multinom(partic ~ hincome + children, data=Womenlf))
print(coefs <- as.vector(outer(c("not.work.", "parttime."),
c("hincome", "childrenpresent"),
paste0)))
linearHypothesis(m, coefs) # ominbus Wald test
}
print(coefs <- as.vector(outer(c("Treatment1.", "Treatment2.", "Treatment3."),
c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_", "num_water_access_points",
"q_51"),
paste0)))
joint_test <- linearHypothesis(model, coefs)
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
vars_to_include
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
#model
print(coefs <- as.vector(outer(c("Treatment1.", "Treatment2.", "Treatment3."),
c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_", "num_water_access_points",
"q_51"),
paste0)))
# Perform the Wald test to check the joint significance of the variables (excluding intercept)
joint_test <- linearHypothesis(model, coefs)
model
view(joint_df)
joint_df$treatment_group <- relevel(joint_df$treatment_group, ref = "Control")
joint_df$treatment_group <- factor(joint_df$treatment_group, levels = c("Control", "Local Control", "Treatment1", "Treatment2", "Treatment3"))
view(joint_df)
oint_df$treatment_group <- relevel(joint_df$treatment_group, ref = "Control")
joint_df$treatment_group <- factor(joint_df$treatment_group, levels = c("Control", "Local Control", "Treatment1", "Treatment2", "Treatment3"))
view(joint_df)
joint_df$treatment_group <- relevel(joint_df$treatment_group, ref = "Control")
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
#model
model
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
#reatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# # Create coefficient names dynamically for the Wald test (one for each treatment)
# coefs <- unlist(lapply(vars_to_include, function(var) {
#   paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
# }))
# coefs
# # Perform the Wald test to check the joint significance of these predictors across treatments
# joint_test <- linearHypothesis(model, coefs)
# # Print the results of the joint test
# print(joint_test)
#model_coef_names <- rownames(summary(model)$coefficients)
#model_coef_names
# Exclude the intercept (reference category) from the list of coefficients
#coefs <- model_coef_names[!grepl("Intercept", model_coef_names)]
print(coefs <- as.vector(outer(c("Treatment1.", "Treatment2.", "Treatment3."),
c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_", "num_water_access_points",
"q_51"),
paste0)))
# Perform the Wald test to check the joint significance of the variables (excluding intercept)
joint_test <- linearHypothesis(model, coefs)
joint_df$treatment_group <- factor(joint_df$treatment_group, levels = c("Control", "Treatment1", "Treatment2", "Treatment3"))
view(joint_df)
joint_df$treatment_group <- relevel(joint_df$treatment_group, ref = "Control")
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
#model
model
# Set up the vector of treatment levels (excluding 'Control' as it's the baseline)
#reatments <- c("Treatment1.", "Treatment2.", "Treatment3.")
# # Create coefficient names dynamically for the Wald test (one for each treatment)
# coefs <- unlist(lapply(vars_to_include, function(var) {
#   paste0(treatments, var)  # Creating coefficient names for each variable by each treatment
# }))
# coefs
# # Perform the Wald test to check the joint significance of these predictors across treatments
# joint_test <- linearHypothesis(model, coefs)
# # Print the results of the joint test
# print(joint_test)
#model_coef_names <- rownames(summary(model)$coefficients)
#model_coef_names
# Exclude the intercept (reference category) from the list of coefficients
#coefs <- model_coef_names[!grepl("Intercept", model_coef_names)]
print(coefs <- as.vector(outer(c("Treatment1.", "Treatment2.", "Treatment3."),
c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_", "num_water_access_points",
"q_51"),
paste0)))
# Perform the Wald test to check the joint significance of the variables (excluding intercept)
joint_test <- linearHypothesis(model, coefs)
# Generate the model formula dynamically using all columns except 'treatment_group'
treatment_dummies <- model.matrix(~ treatment_group - 1, data = joint_df)
# Add the indicator variables back to the original data frame
joint_df <- cbind(joint_df, treatment_dummies)
# Exclude 'treatment_group' and any other variable you don't want (e.g., 'hhid', 'target_village')
joint_df$treatment_group <- factor(joint_df$treatment_group, levels = c("Control", "Treatment1", "Treatment2", "Treatment3"))
joint_df$treatment_group <- relevel(joint_df$treatment_group, ref = "Control")
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
#model
model
joint_df$treatment_group <- factor(joint_df$treatment_group, levels = c("Control", "Treatment1", "Treatment2", "Treatment3"))
joint_df$treatment_group <- relevel(joint_df$treatment_group, ref = "Control")
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
#model
model
print(coefs <- as.vector(outer(c("Treatment1.", "Treatment2.", "Treatment3."),
c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_", "num_water_access_points",
"q_51"),
paste0)))
# Perform the Wald test to check the joint significance of the variables (excluding intercept)
joint_test <- linearHypothesis(model, coefs)
model
clean_model_output <- model_output %>%
select(-starts_with("treatment"))  # Drop any columns starting with "treatment"
# Assuming 'model_output' is your regression output stored as a dataframe
clean_model_output <- model %>%
select(-starts_with("treatment"))  # Drop any columns starting with "treatment"
clean_model_output <- model_output[!grepl("^treatment", rownames(model_output)), ]
# Assuming 'model_output' is a matrix (e.g., summary(model)$coefficients)
clean_model_output <- model[!grepl("^treatment", rownames(model)), ]
clean_model_output <- model[!grepl("^treatment", names(model))]
clean_model_output
joint_df$treatment_group <- factor(joint_df$treatment_group, levels = c("Control", "Treatment1", "Treatment2", "Treatment3"))
joint_df$treatment_group <- relevel(joint_df$treatment_group, ref = "Control")
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
#model
model
model_df <- as.data.frame(model)
# Extract coefficients from the multinom model
model_matrix <- summary(model)$coefficients
# Convert to a dataframe
model_df <- as.data.frame(model_matrix)
# Add coefficient names as a column
model_df <- tibble::rownames_to_column(model_df, var = "Variable")
# Print the first few rows
head(model_df)
model_df  %>%
select(-starts_with("treatment_group"))
model_df
model_df  %>%
select(-starts_with("treatment_group"))
model_df  %>%
select(-starts_with("treatment_group"))
model_df
# Adding a single categorical variable for household training categories - this is for computing summary stats since I'm keeping the trained_hh variable
joint_df <- balance_df %>%
mutate(
group = str_sub(hhid, 3, 4),
treatment_group = case_when(
group %in% c("0A", "0B") ~ "Control",
group %in% c("1A", "1B") ~ "Treatment1",
group %in% c("2A", "2B") ~ "Treatment2",
group %in% c("3A", "3B") ~ "Treatment3",
)
) %>% select(-group)
names(joint_df)
joint_long_data <- joint_df %>%
pivot_longer(
cols = -c(hhid, hhid_village, treatment_group),  # Keep hhid and group as is, pivot all other columns
names_to = "variable",    # Create a column named "variable" for former column names
values_to = "value"       # Store values in a column named "value"
)
joint_long_data <- joint_long_data %>%
rename(group = treatment_group)
view(joint_long_data)
summary_df <- balance_df %>%
mutate(
group = str_sub(hhid, 3, 4),
treatment_group = case_when(
group %in% c("0A", "0B") ~ "Control",
group %in% c("1A", "1B") ~ "Treatment1",
group %in% c("2A", "2B") ~ "Treatment2",
group %in% c("3A", "3B") ~ "Treatment3",
group %in% c("1A", "1B", "2A", "2B", "3A", "3B") & trained_hh == 0 ~ "Local Control"
)
) %>% select(-group)
long_data_sum <- summary_df %>%
pivot_longer(
cols = -c(hhid, hhid_village, treatment_group),  # Keep hhid and group as is, pivot all other columns
names_to = "variable",    # Create a column named "variable" for former column names
values_to = "value"       # Store values in a column named "value"
)
long_data_sum <- long_data_sum %>%
rename(group = treatment_group)
# Adding a single categorical variable for household training categories - this is for running regressions to avoid multicollinearity with trained_hh
balance_df <- balance_df %>%
mutate(
# Extract the two middle characters (e.g., 2A) from hhid
group = str_sub(hhid, 3, 4),
# Assign treatment group, ensuring "Local Control" is prioritized
treatment_group = case_when(
group %in% c("0A", "0B") ~ "Control",
group %in% c("1A", "1B") ~ "Treatment1",
group %in% c("2A", "2B") ~ "Treatment2",
group %in% c("1A", "1B", "2A", "2B", "3A", "3B") & trained_hh == 0 ~ "Local Control",  # Moved to the top
group %in% c("3A", "3B") ~ "Treatment3"
)
) %>% select(-group, -trained_hh)
balance_df
long_data <- balance_df %>%
pivot_longer(
cols = -c(hhid, hhid_village, treatment_group),  # Keep hhid and group as is, pivot all other columns
names_to = "variable",    # Create a column named "variable" for former column names
values_to = "value"       # Store values in a column named "value"
)
long_data <- long_data %>%
rename(group = treatment_group)
view(long_data)
view(balance_df)
joint_long_data
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
model
Womenlf
view(joint_df)
vars_to_include <- setdiff(names(joint_df), c("treatment_group", "hhid", "hhid_village", "target_village", "trained_hh"))
# Create a formula for the regression (exclude the intercept with '- 1')
formula <- as.formula(paste("treatment_group ~", paste(vars_to_include, collapse = " + "), "- 1"))
formula
# Fit the multinomial regression model
model <- multinom(formula, data = joint_df)
model
# # Extract coefficients from the multinom model
# model_matrix <- summary(model)$coefficients
#
# # Convert to a dataframe
# model_df <- as.data.frame(model_matrix)
#
# # Add coefficient names as a column
# model_df <- tibble::rownames_to_column(model_df, var = "Variable")
#
# # Print the first few rows
# head(model_df)
#
#
# model_df  %>%
#  select(-starts_with("treatment_group"))
# model_df
#view(joint_df)
print(coefs <- as.vector(outer(c("Treatment1.", "Treatment2.", "Treatment3."),
c("hh_age_h", "hh_education_level_bin_h", "hh_education_skills_5_h", "hh_gender_h",
"hh_numero", "hh_03_", "hh_10_", "hh_12_6_", "hh_16_", "hh_15_2", "hh_26_", "hh_29_01",
"hh_29_02", "hh_29_03", "hh_29_04", "hh_37_", "hh_38_", "living_01_bin", "game_A_total",
"game_B_total", "TLU", "agri_6_15", "agri_6_32_bin", "agri_6_36_bin", "total_land_ha",
"agri_6_34_comp_any", "agri_income_01", "agri_income_05", "beliefs_01_bin", "beliefs_02_bin",
"beliefs_03_bin", "beliefs_04_bin", "beliefs_05_bin", "beliefs_06_bin", "beliefs_07_bin",
"beliefs_08_bin", "beliefs_09_bin", "health_5_3_bin", "health_5_6_", "num_water_access_points",
"q_51"),
paste0)))
